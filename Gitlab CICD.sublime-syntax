%YAML 1.2
---
# https://docs.gitlab.com/ee/ci/yaml/
scope: source.yaml.pipeline.gitlab
version: 2

extends: Packages/YamlPipelines/YamlPipeline.sublime-syntax

file_extensions:
  - .gitlab-ci.yml
  - gitlab-ci.yml

variables:
  global_keywords: |-
    (?x)\b(?:
      variables
    | default
    | workflow
    | include
    | stages
    )\b


contexts:
  node:
    - meta_prepend: true
    - match: ^\s+(script|before_script|after_script)\s*(:)(?=\s|$)
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.flow.script.pipeline
        2: punctuation.separator.key-value.yaml
      push: script-block-sequence
    - match: ^({{global_keywords}})\s*(:)$
      captures:
        1: meta.mapping.key.yaml meta.string.yaml string.unquoted.plain.out.yaml
        2: meta.mapping.yaml punctuation.separator.key-value.mapping.yaml
    - match: ^(?=[\.\w])([-.\w ]+)\s*(:)$
      captures:
        1: entity.name.label.gitlab
        2: punctuation.separator.key-value.yaml

  script-block-sequence:
    - meta_scope: meta.block.script.pipeline
    # a list item followed by alias, macro or block scalar
    - match: ^(\s*)(-)\s+(?=[\s*!|>])
      captures:
        2: punctuation.definition.block.sequence.item.yaml
      embed: script-block-node
      escape: ^(?!\1[ ]{2}|\s*#)
    # a list item with shell script content
    - match: ^(\s*)(-)\s+
      captures:
        2: punctuation.definition.block.sequence.item.yaml
      embed: scope:source.shell.bash.folded
      embed_scope: source.shell.bash.embedded
      escape: ^(?!\1[ ]{2}|\s*#)
    - match: ^
      pop: 1

  script-block-node:
    - include: flow-alias
    - include: script-block-scalar
    - include: flow-scalar-script-out

  embedded-bash:
    - meta_include_prototype: false
    - meta_scope: source.shell.bash.embedded
    - include: scope:source.shell.bash

  embedded-bash-folded:
    - meta_include_prototype: false
    - meta_scope: source.shell.bash.embedded
    - include: scope:source.shell.bash.folded

  property:
    - meta_prepend: true
    - match: (!reference)\s*(\[)
      captures:
        1: meta.property.yaml storage.type.tag-handle.yaml
        2: meta.sequence.flow.yaml punctuation.definition.sequence.begin.yaml
      push: gitlab-reference-flow-sequence-body

  gitlab-reference-flow-sequence-body:
    - meta_content_scope: meta.sequence.flow.yaml
    - match: \]
      scope: meta.sequence.flow.yaml punctuation.definition.sequence.end.yaml
      pop: 1
    - match: ','
      scope: punctuation.separator.sequence.yaml
      push: gitlab-after-reference
    - match: '[-\w.]+'
      scope: constant.other.label.gitlab
    - include: flow-pair-no-clear
    - include: flow-node-11

  gitlab-after-reference:
    - match: \w+
      scope: keyword.other.gitlab
    - match: ','
      scope: punctuation.separator.sequence.yaml
      set: gitlab-after-reference-type
    - include: flow-pair-no-clear
    - include: flow-node-11
    - match: (?=\])
      pop: 1

  gitlab-after-reference-type:
    - match: \w+
      scope: variable.other.constant.gitlab
    - match: ','
      scope: punctuation.separator.sequence.yaml
    - include: flow-pair-no-clear
    - include: flow-node-11
    - match: (?=\S)
      pop: 1
