%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
scope: source.yaml.pipeline.github-actions
version: 2

extends: Packages/YamlPipelines/YamlPipeline.sublime-syntax

contexts:
  node:
    - meta_prepend: true
    - match: \s+(run|inlineScript)\s*(:)(?=\s|$)
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.flow.script.pipeline
        2: punctuation.separator.key-value.yaml
      push: script-block-node
    - match: \s+(if)\s*(:)(?=\s+\|)
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.flow.condition.pipeline
        2: punctuation.separator.key-value.yaml
      push: if-block-scalar
    - match: \s+(if)\s*(:)(?=\s+(?!\$\{\{))
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.flow.condition.pipeline
        2: punctuation.separator.key-value.yaml
      push: inside-if
    - match: \s+(if)\s*(:)(?=\s+(?=\$\{\{))
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.flow.condition.pipeline
        2: punctuation.separator.key-value.yaml
    - match: \s+(needs)\s*(:)(?=\s|$)
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.conditional.dependencies.pipeline
        2: punctuation.separator.key-value.yaml
      push: expect-dependencies
    - match: ^(jobs)\s*(:)(?=\s|$)
      captures:
        1: string.unquoted.plain.out.yaml keyword.declaration.class.pipeline
        2: punctuation.separator.key-value.yaml
      push: expect-jobs

  inside-if:
    - meta_include_prototype: false
    - include: flow-scalar-plain-out-body
    - include: inside-expression

  inside-expression:
    - meta_append: true
    # https://docs.github.com/en/actions/learn-github-actions/expressions
    - include: context
    - match: \bnull\b
      scope: constant.language.null.github-actions
    - include: operators

  context:
    # https://docs.github.com/en/actions/learn-github-actions/contexts
    - match: \b(?:github|env|vars|job|jobs|steps|runner|secrets|strategy|matrix|needs|inputs)\b
      scope: constant.language.context.github-actions
      push: possible-accessor
    # TODO: mark steps.x as a reference

  operators:
    - match: '=='
      scope: keyword.operator.comparison.github-actions
    - match: '!'
      scope: keyword.operator.logical.github-actions
    - match: '&&'
      scope: keyword.operator.logical.github-actions
    - match: '\|\|'
      scope: keyword.operator.logical.github-actions

  embedded-bash:
    - meta_include_prototype: false
    - meta_scope: source.shell.bash.embedded
    - include: scope:source.shell.bash.github-actions

  embedded-bash-folded:
    - meta_include_prototype: false
    - meta_scope: source.shell.bash.embedded
    - include: scope:source.shell.bash.folded-github-actions

  expect-jobs:
    - match: ^(\s*)([\w\-]+)\s*(:)(?=\s|$)
      captures:
        2: entity.name.function.github-actions
        3: punctuation.separator.key-value.yaml
      push: job-definition
    - match: ^(?=\w)
      pop: true

  job-definition:
    - match: ^(?!\1|\s*$)
      pop: true
    - match: ^\s*(id)\s*(:)\s*([\w\-]+)
      captures:
        1: meta.mapping.key.yaml meta.string.yaml string.unquoted.plain.out.yaml
        2: punctuation.separator.key-value.github-actions
        3: entity.name.label.github-actions
    - include: node

  expect-dependencies:
    #- include: node
    # TODO: mark as an indexed reference
    - match: ''
      pop: true

  interpolations:
    - meta_prepend: true
    - include: environment-files

  environment-files:
    - match: (\$)GITHUB_(?:PATH|STEP_SUMMARY|OUTPUT|STATE|ENV)\b
      captures:
        0: variable.language.github-actions
        1: punctuation.definition.variable.github-actions

  if-block-scalar:
    # http://www.yaml.org/spec/1.2/spec.html#style/block/scalar
    # c-l+literal(n) | c-l+folded(n)
    - match: (?:(\|)|(>))(?:([1-9])([-+])|([-+])?([1-9])?)  # c-b-block-header(m,t)
      captures:
        1: keyword.control.flow.block-scalar.literal.yaml
        2: keyword.control.flow.block-scalar.folded.yaml
        3: constant.numeric.indentation-indicator.yaml
        4: storage.modifier.chomping-indicator.yaml
        5: storage.modifier.chomping-indicator.yaml
        6: constant.numeric.indentation-indicator.yaml
      set: if-block-scalar-begin

  if-block-scalar-begin:
    - meta_include_prototype: false
    - match: ^([ ]+)(?! )  # match first non-empty line to determine indentation level
      # note that we do not check if indentation is enough
      set: if-block-scalar-body
    - match: ^(?=\S)  # the block is empty
      pop: true
    - include: comment  # include comments but not properties
    - match: .+
      scope: invalid.illegal.expected-comment-or-newline.yaml

  if-block-scalar-body:
    - meta_include_prototype: false
    - meta_scope: meta.block.if.github-actions
    - include: inside-expression
    - include: comment
    - match: ^(?!\1|\s*$)
      pop: true

  variable-access:
    - meta_prepend: true
    - match: \*
      scope: constant.other.wildcard.github-actions
      set: possible-accessor
