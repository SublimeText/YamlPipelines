# SYNTAX TEST partial-symbols "Packages/YamlPipelines/Bitbucket Pipeline.sublime-syntax"
image:
  name: atlassian/default-image:2

pipelines:
# ^^^^^^^ meta.mapping.key.yaml meta.string.yaml string.unquoted.plain.out.yaml - entity
  default:
  - step:
      name: Build and Push
#     ^^^^ meta.mapping.key.yaml meta.string.yaml string.unquoted.plain.out.yaml
#         ^ punctuation.separator.key-value.yaml
#           ^^^^^^^^^^^^^^ entity.name.label.bitbucket meta.string.yaml string.unquoted.plain.in.yaml
#           @@@@@@@@@@@@@@ definition
#                         ^ - entity - string
      script:
#     ^^^^^^ string.unquoted.plain.out keyword.control.flow.script
#           ^ punctuation.separator.key-value
      # Build and push image
#     ^^^^^^^^^^^^^^^^^^^^^^^ comment.line.number-sign
      - VERSION="1.$BITBUCKET_BUILD_NUMBER"
#     ^^ meta.block.script.pipeline - source.shell
#       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.script.pipeline source.shell.bash.embedded
#     ^ punctuation.definition.block.sequence.item
#       ^^^^^^^ variable.other.readwrite.shell
#              ^ keyword.operator.assignment.shell
#               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string
      - echo ${DOCKERHUB_PASSWORD}
        | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
#       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.script.pipeline source.shell.bash.embedded
#       ^ keyword.operator.assignment.pipe.shell
#         ^^^^^^ meta.function-call.identifier.shell variable.function.shell
#               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.shell
#                      ^^ variable.parameter.option.shell punctuation.definition.parameter.shell
#                        ^^^^^^^^ variable.parameter.option.shell - punctuation
      - IMAGE="$DOCKERHUB_USERNAME/$BITBUCKET_REPO_SLUG"
      - docker build -t ${IMAGE}:${VERSION} .
      - docker tag ${IMAGE}:${VERSION} ${IMAGE}:latest
      - docker push ${IMAGE}
      # Push tags
      - 'git tag -a "${VERSION}" -m
        "Tagging for release ${VERSION}"'
#       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.script.pipeline source.shell.bash.embedded meta.function-call.arguments.shell meta.string.glob.shell
#                                       ^ meta.string.yaml string.quoted.single.yaml punctuation.definition.string.end.yaml - source.shell
      - 'git push origin ${VERSION}'
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.script.pipeline
#     ^ punctuation.definition.block.sequence.item.yaml
#       ^ meta.string.yaml string.quoted.single.yaml punctuation.definition.string.begin.yaml - source.shell
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.yaml source.shell.bash.embedded
#        ^^^ meta.function-call.identifier.shell meta.command.shell variable.function.shell
#           ^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.shell
#                                  ^ meta.string.yaml string.quoted.single.yaml punctuation.definition.string.end.yaml - source.shell
      services:
#     ^^^^^^^^ meta.mapping.key meta.string string.unquoted.plain.out - source.shell
      - docker
#     ^ punctuation.definition.block.sequence.item
#       ^^^^^^ meta.string string.unquoted.plain.out - source.shell
