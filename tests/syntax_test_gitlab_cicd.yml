# SYNTAX TEST "Packages/YamlPipelines/Gitlab CICD.sublime-syntax"
build-job:
# ^^^^^^^ entity.name.label
#        ^ punctuation.separator.key-value - entity
  stage: build
# ^^^^^^^^^^^^^ - entity
  script:
# ^^^^^^ string.unquoted.plain.out keyword.control.flow.script
#       ^ punctuation.separator.key-value
    - echo "Hello, $GITLAB_USER_LOGIN!"
#   ^ punctuation.definition.block.sequence.item
#     ^^^^ source.shell meta.function-call.identifier support.function.echo
  after_script:
# ^^^^^^^^^^^^ string.unquoted.plain.out keyword.control.flow.script
#             ^ punctuation.separator.key-value
    - echo "Execute this command after the `script` section completes."
#   ^ punctuation.definition.block.sequence.item
#     ^^^^ source.shell meta.function-call.identifier support.function.echo
  before_script:
# ^^^^^^^^^^^^^ string.unquoted.plain.out keyword.control.flow.script
#              ^ punctuation.separator.key-value
    - echo "Execute this `before_script` in all jobs by default."
#   ^ punctuation.definition.block.sequence.item
#     ^^^^ source.shell meta.function-call.identifier support.function.echo

# <- - source.shell
test-job1:
# ^^^^^^^ entity.name.label
#        ^ punctuation.separator.key-value - entity
  stage: test
# ^^^^^ meta.mapping.key meta.string string.unquoted.plain.out - entity
  script:
# ^^^^^^ string.unquoted.plain.out keyword.control.flow.script
#       ^ punctuation.separator.key-value
    - echo "This job tests something"
#   ^ punctuation.definition.block.sequence.item
#^^^ - punctuation
#    ^ - punctuation
  - |
# ^ meta.block.script punctuation.definition.block.sequence.item
#   ^ meta.block.script keyword.control.flow.block-scalar.literal
    echo "First command line."
    #^^^ meta.function-call.identifier support.function.echo
    echo "Second command line."
    #^^^ meta.function-call.identifier support.function.echo
    echo "Third command line."

test-job2:
# <- - source.shell
  stage: test
  script:
    - echo "This job tests something, but takes more time than test-job1."
    - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
    - echo "which simulates a test that runs 20 seconds longer than test-job1"
    - sleep 20

deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  environment: production


build osx:
  stage: build
  script: make build:osx
  artifacts:
    paths:
      - binaries/

build linux:
# ^^^^^^^^^ entity.name.label
#          ^ punctuation.separator.key-value
  stage: build
  script: make build:linux
  artifacts:
    paths:
      - binaries/

test osx:
  stage: test
  script: make test:osx
  dependencies:
    - build osx

test linux:
  stage: test
  script: make test:linux
  dependencies:
    - build linux

deploy:
  stage: deploy
  script: make deploy
  environment: production

.npm-test:
# <- entity.name.label
#^^^^^^^^ entity.name.label
#        ^ punctuation.separator.key-value
  extends: .npm-test-job
  artifacts:
    when: always
    reports:
      junit: "**/reports/**/*.xml"
    paths:
      - coverage
      - reports
  script:
    - npm run test
