# SYNTAX TEST "Packages/YamlPipelines/AzureDevops.sublime-syntax"

# When manually running the pipeline, you can select whether it
# succeeds or fails.
parameters:
- name: succeed
  displayName: Succeed or fail
  type: boolean
  default: false

trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:
- job: Work
# TODO: index job names
  steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'

  # This malformed command causes the job to fail
  # Only run this command if the succeed variable is set to false
  - script: git clone malformed input
    condition: eq(${{ parameters.succeed }}, false)
#   ^^^^^^^^^ string.unquoted.plain.out keyword.control.flow.condition
#            ^ punctuation.separator.key-value
#              ^^ meta.function-call.identifier support.function
#                ^ punctuation.section.parens.begin
#                 ^^^ punctuation.section.interpolation.begin
#                     ^^^^^^^^^^ constant.language.context
#                               ^ punctuation.accessor.dot
#                                ^^^^^^^ variable.other.member
#                                        ^^ punctuation.section.interpolation.end
#                                          ^ punctuation.separator.argument
#                                            ^^^^^ constant.language.boolean
#                                                 ^ punctuation.section.parens.end

# This job creates a work item, and only runs if the previous job failed
- job: ErrorHandler
  dependsOn: Work
# TODO: goto reference on job dependencies
  condition: failed()
  steps: 
  - bash: |
      az boards work-item create \
        --title "Build $(build.buildNumber) failed" \
        --type bug \
        --org $(System.TeamFoundationCollectionUri) \
        --project $(System.TeamProject)
    env: 
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
    displayName: 'Create work item on failure'
  - pwsh: echo $(Build.BuildNumber) //output updated build number
# TODO: use powershell syntax above instead of Bash
