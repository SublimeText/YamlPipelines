# SYNTAX TEST "Packages/YamlPipelines/AzureDevops.sublime-syntax"

# Docker image and Azure Container Registry
# Build a Docker image and push it to an Azure Container Registry.
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- {{ branch }}

resources:
- repo: self

variables:
  # ========================================================================
  #                          Mandatory variables
  # ========================================================================

 # Update Azure.ResourceGroupName value with Azure resource group name.
  Azure.ResourceGroupName: '{{#toAlphaNumericString repositoryName 50}}{{/toAlphaNumericString}}'

  # Update Azure.ServiceConnectionId value with AzureRm service endpoint.
  Azure.ServiceConnectionId: '{{ azureServiceConnectionId }}'

  # Update Azure.Location value with Azure Location.
  Azure.Location: 'eastus'

  # Update ACR.Name value with ACR name. Please note ACR names should be all lower-case and alphanumeric only.
  ACR.Name: '{{#toAlphaNumericString repositoryName 46}}{{/toAlphaNumericString}}{{#shortGuid}}{{/shortGuid}}'

  # ========================================================================
  #                           Optional variables
  # ========================================================================

  ACR.ImageName: '$(ACR.Name):$(Build.BuildId)'
  ACR.FullName: '$(ACR.Name).azurecr.io'
  Azure.CreateResources: 'true' # Update Azure.CreateResources to false if you have already created resources like resource group and azure container registry.
  System.Debug: 'false'

jobs:

- job: CreateResources
  displayName: Create required resources
  condition: and(succeeded(), eq(variables['Azure.CreateResources'], 'true'))

  pool:
    {{ pool }}

  steps:
  - task: AzureResourceGroupDeployment@2
    displayName: 'Azure Deployment:Create Azure Container Registry'
    inputs:
      azureSubscription: '$(Azure.ServiceConnectionId)'
      resourceGroupName: '$(Azure.ResourceGroupName)'
      location: '$(Azure.Location)'
      templateLocation: 'URL of the file'
      csmFileLink: 'https://raw.githubusercontent.com/Microsoft/azure-pipelines-yaml/master/templates/resources/arm/acr.json'
      overrideParameters: '-registryName "$(ACR.Name)" -registryLocation "$(Azure.Location)"'

- job: BuildImage
  displayName: Build
  dependsOn: CreateResources
  condition: or(succeeded(), ne(variables['Azure.CreateResources'], 'true'))
# ^^^^^^^^^ string.unquoted.plain.out keyword.control.flow.condition
#          ^ punctuation.separator.key-value
#            ^^ support.function
#              ^ punctuation.section.parens.begin
#               ^^^^^^^^^ support.function
#                        ^ punctuation.section.parens.begin
#                         ^ punctuation.section.parens.end
#                          ^ punctuation.separator.argument
#                            ^^ support.function
#                              ^ punctuation.section.parens.begin
#                               ^^^^^^^^^ constant.language.context
#                                        ^ punctuation.accessor.begin
#                                         ^ punctuation.definition.string.begin
#                                          ^^^^^^^^^^^^^^^^^^^^^ string.quoted.single
#                                                               ^ punctuation.definition.string.end
#                                                                ^ punctuation.accessor.end
#                                                                 ^ punctuation.separator.argument
#                                                                   ^ punctuation.definition.string.begin
#                                                                    ^^^^ string.quoted.single
#                                                                        ^ punctuation.definition.string.end
#                                                                         ^^ punctuation.section.parens.end
  condition: and(succeeded(), eq(dependencies.IsRelease.outputs['Releaseable.status'], 'success'))
  variables:
    currentVersionName: $[dependencies.IsRelease.outputs['currentVersion.name']]
#                       ^^ punctuation.section.block.begin.pipeline
#                         ^^^^^^^^^^^^ constant.language.context.pipeline

  pool:
    {{ pool }}

  steps:
  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
      azureContainerRegistry: '$(ACR.FullName)'
      imageName: '$(ACR.ImageName)'
      command: build
      dockerFile: '**/Dockerfile'

  - task: Docker@1
    displayName: 'Push an image'
    inputs:
      azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
      azureContainerRegistry: '$(ACR.FullName)'
      imageName: '$(ACR.ImageName)'
      command: push

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/definitions/$($env:SYSTEM_DEFINITIONID)?api-version=5.0"
                Write-Host "URL: $url"
                $pipeline = Invoke-RestMethod -Uri $url -Headers @{
                    Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"
                }
                Write-Host "Pipeline = $($pipeline | ConvertTo-Json -Depth 100)"
# TODO: use PowerShell syntax above instead of Bash
    env:
       SYSTEM_ACCESSTOKEN: $(System.AccessToken)

    - script: |
        # https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash
        echo "##vso[task.setvariable variable=testvar;]testvalue"
        echo "##vso[task.logissue type=warning;sourcepath=consoleapp/main.cs;linenumber=1;columnnumber=1;code=100;]Found something that could be a problem."

