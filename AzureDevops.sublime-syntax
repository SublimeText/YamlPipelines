%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
scope: source.yaml.pipeline.azure-devops
version: 2

extends: Packages/YamlPipelines/YamlPipeline.sublime-syntax

file_extensions:
  - azure-pipelines.yml

contexts:
  main:
    - meta_prepend: true
    - match: \s(inlineScript|script)\s*(:)(?=\s|$) # TODO: honor scriptType using branching
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.flow.script.pipeline
        2: punctuation.separator.key-value.yaml
      push: script-block-node
    - match: \s(bash)\s*(:)(?=\s|$)
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.flow.script.pipeline
        2: punctuation.separator.key-value.yaml
      push: script-block-node
    - match: \s(pwsh|powershell)\s*(:)(?=\s|$)
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.flow.script.pipeline
        2: punctuation.separator.key-value.yaml
      push: script-block-node # TODO: embed powershell instead of Bash
    - match: \s+(condition)\s*(:)(?=\s+(?!\$\{\{)) # TODO: be smarter in case | is used etc.
      captures:
        1: string.unquoted.plain.out.yaml keyword.control.flow.condition.pipeline
        2: punctuation.separator.key-value.yaml
      push:
        - include: flow-scalar-plain-out-body
        - include: inside-expression

  string-interpolations:
    # https://learn.microsoft.com/en-us/azure/devops/pipelines/process/expressions?view=azure-devops
    - meta_prepend: true
    - match: \$\(
      scope: punctuation.definition.variable.begin.pipeline
      push: inside-ado-variable-reference-string-interpolation
    - match: \$\[
      scope: punctuation.section.block.begin.pipeline
      push: inside-ado-runtime-expression-string-interpolations

  inside-ado-variable-reference-string-interpolation:
    - clear_scopes: 1  # clear string scope
    - meta_scope: meta.interpolation.pipeline
    - meta_content_scope: variable.other.constant.pipeline
    - include: inside-ado-variable-reference

  inside-ado-runtime-expression-string-interpolations:
    - clear_scopes: 1  # clear string scope
    - meta_scope: meta.interpolation.pipeline meta.block.pipeline
    - include: inside-ado-runtime-expression

  interpolations:
    # https://learn.microsoft.com/en-us/azure/devops/pipelines/process/expressions?view=azure-devops
    - meta_prepend: true
    - match: \$\(
      scope: punctuation.definition.variable.begin.pipeline
      push: inside-ado-variable-reference
    - match: \$\[
      scope: punctuation.section.block.begin.pipeline
      push: inside-ado-runtime-expression

  inside-ado-variable-reference:
    - meta_scope: meta.interpolation.pipeline
    - meta_content_scope: variable.other.constant.pipeline
    - match: \)
      scope: punctuation.definition.variable.end.pipeline
      pop: 1

  inside-ado-runtime-expression:
    - meta_scope: meta.interpolation.pipeline meta.block.pipeline
    - match: \]
      scope: punctuation.section.block.end.pipeline
      pop: 1
    - include: inside-expression

  inside-expression:
    - meta_append: true
    - include: interpolations
    - include: context
    - match: \b(?i:true|false)\b
      scope: constant.language.boolean.pipeline

  context:
    - match: \b(?:parameters|variables|dependencies)\b
      scope: constant.language.context.pipeline
      push: possible-accessor

  embedded-bash:
    - meta_append: true
    - match: ''
      push: scope:source.shell.bash.azure-devops
